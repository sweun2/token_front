{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport './styles/App.css';\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport ATNToken from './utils/ATNToken.json';\nconst CONTRACT_ADDRESS = \"0x56f3532eDEeb1D88757E81CB7E8030b278381d7b\";\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [toAddress, setToAddress] = useState(\"\");\n  const [toAmount, setToAmount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account); // Setup listener! This is for the case where a user comes to our site\n      // and ALREADY had their wallet connected + authorized.\n\n      setupEventListener();\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n};\n\n_s(App, \"hwPjUunRrvqKuldQIMNyuQA8zf4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useEffect","useState","ATNToken","CONTRACT_ADDRESS","App","currentAccount","setCurrentAccount","toAddress","setToAddress","toAmount","setToAmount","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","setupEventListener"],"sources":["/home/sweun2/Desktop/test/sol/front/src/App.js"],"sourcesContent":["import './styles/App.css';\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport ATNToken from './utils/ATNToken.json';\n\nconst CONTRACT_ADDRESS =\"0x56f3532eDEeb1D88757E81CB7E8030b278381d7b\";\n\nconst App=()=>{\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [toAddress, setToAddress] = useState(\"\");\n  const [toAmount, setToAmount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account)\n\n      // Setup listener! This is for the case where a user comes to our site\n      // and ALREADY had their wallet connected + authorized.\n      setupEventListener()\n    } else {\n      console.log(\"No authorized account found\")\n    }\n  }\n  \n\n\n}"],"mappings":";;AAAA,OAAO,kBAAP;AACA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,MAAMC,gBAAgB,GAAE,4CAAxB;;AAEA,MAAMC,GAAG,GAAC,MAAI;EAAA;;EACZ,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMU,wBAAwB,GAAG,YAAY;IAC3C,MAAM;MAAEC;IAAF,IAAeC,MAArB;;IAEA,IAAI,CAACD,QAAL,EAAe;MACbE,OAAO,CAACC,GAAR,CAAY,8BAAZ;MACA;IACD,CAHD,MAGO;MACLD,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,QAA3C;IACD;;IAED,MAAMI,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB;MAAEC,MAAM,EAAE;IAAV,CAAjB,CAAvB;;IAEA,IAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;MACzB,MAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;MACAF,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CK,OAA5C;MACAd,iBAAiB,CAACc,OAAD,CAAjB,CAHyB,CAKzB;MACA;;MACAC,kBAAkB;IACnB,CARD,MAQO;MACLP,OAAO,CAACC,GAAR,CAAY,6BAAZ;IACD;EACF,CAvBD;AA2BD,CAhCD;;GAAMX,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}