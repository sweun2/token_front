{"ast":null,"code":"export function parseCommand(cmd) {\n  const extraSpacesStrippedCommand = cmd.replace(/\\s{2,}/g, ' ');\n  const splitCommand = extraSpacesStrippedCommand.split(/\\s+(?![^[]*]|[^<]*>)/);\n  const bregex = /\\.*[\\][<>]/g;\n  const firstCommand = splitCommand.shift();\n  if (!firstCommand) throw new Error(`No command found in: ${cmd}`);\n  const parsedCommand = {\n    cmd: firstCommand.replace(bregex, ''),\n    demanded: [],\n    optional: []\n  };\n  splitCommand.forEach((cmd, i) => {\n    let variadic = false;\n    cmd = cmd.replace(/\\s/g, '');\n    if (/\\.+[\\]>]/.test(cmd) && i === splitCommand.length - 1) variadic = true;\n\n    if (/^\\[/.test(cmd)) {\n      parsedCommand.optional.push({\n        cmd: cmd.replace(bregex, '').split('|'),\n        variadic\n      });\n    } else {\n      parsedCommand.demanded.push({\n        cmd: cmd.replace(bregex, '').split('|'),\n        variadic\n      });\n    }\n  });\n  return parsedCommand;\n}","map":{"version":3,"names":["parseCommand","cmd","extraSpacesStrippedCommand","replace","splitCommand","split","bregex","firstCommand","shift","Error","parsedCommand","demanded","optional","forEach","i","variadic","test","length","push"],"sources":["/home/sweun2/Desktop/test/sol/front/node_modules/yargs/build/lib/parse-command.js"],"sourcesContent":["export function parseCommand(cmd) {\n    const extraSpacesStrippedCommand = cmd.replace(/\\s{2,}/g, ' ');\n    const splitCommand = extraSpacesStrippedCommand.split(/\\s+(?![^[]*]|[^<]*>)/);\n    const bregex = /\\.*[\\][<>]/g;\n    const firstCommand = splitCommand.shift();\n    if (!firstCommand)\n        throw new Error(`No command found in: ${cmd}`);\n    const parsedCommand = {\n        cmd: firstCommand.replace(bregex, ''),\n        demanded: [],\n        optional: [],\n    };\n    splitCommand.forEach((cmd, i) => {\n        let variadic = false;\n        cmd = cmd.replace(/\\s/g, '');\n        if (/\\.+[\\]>]/.test(cmd) && i === splitCommand.length - 1)\n            variadic = true;\n        if (/^\\[/.test(cmd)) {\n            parsedCommand.optional.push({\n                cmd: cmd.replace(bregex, '').split('|'),\n                variadic,\n            });\n        }\n        else {\n            parsedCommand.demanded.push({\n                cmd: cmd.replace(bregex, '').split('|'),\n                variadic,\n            });\n        }\n    });\n    return parsedCommand;\n}\n"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;EAC9B,MAAMC,0BAA0B,GAAGD,GAAG,CAACE,OAAJ,CAAY,SAAZ,EAAuB,GAAvB,CAAnC;EACA,MAAMC,YAAY,GAAGF,0BAA0B,CAACG,KAA3B,CAAiC,sBAAjC,CAArB;EACA,MAAMC,MAAM,GAAG,aAAf;EACA,MAAMC,YAAY,GAAGH,YAAY,CAACI,KAAb,EAArB;EACA,IAAI,CAACD,YAAL,EACI,MAAM,IAAIE,KAAJ,CAAW,wBAAuBR,GAAI,EAAtC,CAAN;EACJ,MAAMS,aAAa,GAAG;IAClBT,GAAG,EAAEM,YAAY,CAACJ,OAAb,CAAqBG,MAArB,EAA6B,EAA7B,CADa;IAElBK,QAAQ,EAAE,EAFQ;IAGlBC,QAAQ,EAAE;EAHQ,CAAtB;EAKAR,YAAY,CAACS,OAAb,CAAqB,CAACZ,GAAD,EAAMa,CAAN,KAAY;IAC7B,IAAIC,QAAQ,GAAG,KAAf;IACAd,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN;IACA,IAAI,WAAWa,IAAX,CAAgBf,GAAhB,KAAwBa,CAAC,KAAKV,YAAY,CAACa,MAAb,GAAsB,CAAxD,EACIF,QAAQ,GAAG,IAAX;;IACJ,IAAI,MAAMC,IAAN,CAAWf,GAAX,CAAJ,EAAqB;MACjBS,aAAa,CAACE,QAAd,CAAuBM,IAAvB,CAA4B;QACxBjB,GAAG,EAAEA,GAAG,CAACE,OAAJ,CAAYG,MAAZ,EAAoB,EAApB,EAAwBD,KAAxB,CAA8B,GAA9B,CADmB;QAExBU;MAFwB,CAA5B;IAIH,CALD,MAMK;MACDL,aAAa,CAACC,QAAd,CAAuBO,IAAvB,CAA4B;QACxBjB,GAAG,EAAEA,GAAG,CAACE,OAAJ,CAAYG,MAAZ,EAAoB,EAApB,EAAwBD,KAAxB,CAA8B,GAA9B,CADmB;QAExBU;MAFwB,CAA5B;IAIH;EACJ,CAjBD;EAkBA,OAAOL,aAAP;AACH"},"metadata":{},"sourceType":"module"}