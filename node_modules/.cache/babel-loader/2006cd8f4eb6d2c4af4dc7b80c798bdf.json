{"ast":null,"code":"var _jsxFileName = \"/home/sweun2/Desktop/test/sol/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './styles/App.css';\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport ATNToken from './utils/ATNToken.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x56f3532eDEeb1D88757E81CB7E8030b278381d7b\";\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [toAddress, setToAddress] = useState(\"\");\n  const [toAmount, setToAmount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n    /*if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account)\n       // Setup listener! This is for the case where a user comes to our site\n      // and ALREADY had their wallet connected + authorized.\n      setupEventListener()\n    } else {\n      console.log(\"No authorized account found\")\n    }*/\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  });\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log('timee is working...');\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [toAmount]);\n\n  const TransferUI = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: toAddress,\n      placeholder: \"where to send\",\n      onChange: e => {\n        setToAddress(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: toAmount,\n      placeholder: \"how much to send\",\n      onChange: e => setToAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header gradient-text\",\n          children: \"My ERC20 Token Transfer Web App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"Long Live Smiling Leo, Long Live DSRV!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), currentAccount === TransferUI()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Wsc2o7oSOwV6SQqEAxvSD1Nvwb0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useEffect","useState","ATNToken","CONTRACT_ADDRESS","App","currentAccount","setCurrentAccount","toAddress","setToAddress","toAmount","setToAmount","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","timer","setTimeout","clearTimeout","TransferUI","e","target","value"],"sources":["/home/sweun2/Desktop/test/sol/front/src/App.js"],"sourcesContent":["import './styles/App.css';\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport ATNToken from './utils/ATNToken.json';\n\nconst CONTRACT_ADDRESS =\"0x56f3532eDEeb1D88757E81CB7E8030b278381d7b\";\n\nconst App=()=>{\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [toAddress, setToAddress] = useState(\"\");\n  const [toAmount, setToAmount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    /*if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account)\n\n      // Setup listener! This is for the case where a user comes to our site\n      // and ALREADY had their wallet connected + authorized.\n      setupEventListener()\n    } else {\n      console.log(\"No authorized account found\")\n    }*/\n  }\n\n  \n  useEffect(() => {\n    checkIfWalletIsConnected();\n  })\n \n  \n  useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log('timee is working...')\n    }, 500)\n  \n    return () => clearTimeout(timer)\n  }, [toAmount])\n  \n  const TransferUI = () => (\n    <div>\n          <input type=\"text\" value={toAddress} placeholder='where to send' onChange={e => { setToAddress(e.target.value) }}></input>\n          <input type=\"text\" value={toAmount} placeholder='how much to send' onChange={(e) => setToAmount(e.target.value)}></input>\n          \n    </div>\n  )\n  \n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">My ERC20 Token Transfer Web App</p>\n          <p className=\"sub-text\">\n            Long Live Smiling Leo, Long Live DSRV!\n          </p>\n          {currentAccount ===  TransferUI()}\n        </div>\n      </div>\n    </div>\n  );\n\n\n}\n\n\n\n\nexport default App;"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,gBAAgB,GAAE,4CAAxB;;AAEA,MAAMC,GAAG,GAAC,MAAI;EAAA;;EACZ,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMU,wBAAwB,GAAG,YAAY;IAC3C,MAAM;MAAEC;IAAF,IAAeC,MAArB;;IAEA,IAAI,CAACD,QAAL,EAAe;MACbE,OAAO,CAACC,GAAR,CAAY,8BAAZ;MACA;IACD,CAHD,MAGO;MACLD,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,QAA3C;IACD;;IAED,MAAMI,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB;MAAEC,MAAM,EAAE;IAAV,CAAjB,CAAvB;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEG,CAvBD;;EA0BAlB,SAAS,CAAC,MAAM;IACdW,wBAAwB;EACzB,CAFQ,CAAT;EAKAX,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BN,OAAO,CAACC,GAAR,CAAY,qBAAZ;IACD,CAFuB,EAErB,GAFqB,CAAxB;IAIA,OAAO,MAAMM,YAAY,CAACF,KAAD,CAAzB;EACD,CANQ,EAMN,CAACV,QAAD,CANM,CAAT;;EAQA,MAAMa,UAAU,GAAG,mBACjB;IAAA,wBACM;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEf,SAA1B;MAAqC,WAAW,EAAC,eAAjD;MAAiE,QAAQ,EAAEgB,CAAC,IAAI;QAAEf,YAAY,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;MAA8B;IAAhH;MAAA;MAAA;MAAA;IAAA,QADN,eAEM;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEhB,QAA1B;MAAoC,WAAW,EAAC,kBAAhD;MAAmE,QAAQ,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;IAA/F;MAAA;MAAA;MAAA;IAAA,QAFN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE;UAAG,SAAS,EAAC,sBAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAG,SAAS,EAAC,UAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,EAKGpB,cAAc,KAAMiB,UAAU,EALjC;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAnED;;GAAMlB,G;;KAAAA,G;AAwEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}