{"ast":null,"code":"import { assertNotStrictEqual } from './typings/common-types.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function usage(yargs, y18n, shim) {\n  const __ = y18n.__;\n  const self = {};\n  const fails = [];\n\n  self.failFn = function failFn(f) {\n    fails.push(f);\n  };\n\n  let failMessage = null;\n  let showHelpOnFail = true;\n\n  self.showHelpOnFail = function showHelpOnFailFn() {\n    let arg1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let arg2 = arguments.length > 1 ? arguments[1] : undefined;\n\n    function parseFunctionArgs() {\n      return typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n    }\n\n    const [enabled, message] = parseFunctionArgs();\n    failMessage = message;\n    showHelpOnFail = enabled;\n    return self;\n  };\n\n  let failureOutput = false;\n\n  self.fail = function fail(msg, err) {\n    const logger = yargs._getLoggerInstance();\n\n    if (fails.length) {\n      for (let i = fails.length - 1; i >= 0; --i) {\n        fails[i](msg, err, self);\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true);\n\n      if (!failureOutput) {\n        failureOutput = true;\n\n        if (showHelpOnFail) {\n          yargs.showHelp('error');\n          logger.error();\n        }\n\n        if (msg || err) logger.error(msg || err);\n\n        if (failMessage) {\n          if (msg || err) logger.error('');\n          logger.error(failMessage);\n        }\n      }\n\n      err = err || new YError(msg);\n\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1);\n      } else if (yargs._hasParseCallback()) {\n        return yargs.exit(1, err);\n      } else {\n        throw err;\n      }\n    }\n  };\n\n  let usages = [];\n  let usageDisabled = false;\n\n  self.usage = (msg, description) => {\n    if (msg === null) {\n      usageDisabled = true;\n      usages = [];\n      return self;\n    }\n\n    usageDisabled = false;\n    usages.push([msg, description || '']);\n    return self;\n  };\n\n  self.getUsage = () => {\n    return usages;\n  };\n\n  self.getUsageDisabled = () => {\n    return usageDisabled;\n  };\n\n  self.getPositionalGroupName = () => {\n    return __('Positionals:');\n  };\n\n  let examples = [];\n\n  self.example = (cmd, description) => {\n    examples.push([cmd, description || '']);\n  };\n\n  let commands = [];\n\n  self.command = function command(cmd, description, isDefault, aliases) {\n    let deprecated = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    if (isDefault) {\n      commands = commands.map(cmdArray => {\n        cmdArray[2] = false;\n        return cmdArray;\n      });\n    }\n\n    commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n  };\n\n  self.getCommands = () => commands;\n\n  let descriptions = {};\n\n  self.describe = function describe(keyOrKeys, desc) {\n    if (Array.isArray(keyOrKeys)) {\n      keyOrKeys.forEach(k => {\n        self.describe(k, desc);\n      });\n    } else if (typeof keyOrKeys === 'object') {\n      Object.keys(keyOrKeys).forEach(k => {\n        self.describe(k, keyOrKeys[k]);\n      });\n    } else {\n      descriptions[keyOrKeys] = desc;\n    }\n  };\n\n  self.getDescriptions = () => descriptions;\n\n  let epilogs = [];\n\n  self.epilog = msg => {\n    epilogs.push(msg);\n  };\n\n  let wrapSet = false;\n  let wrap;\n\n  self.wrap = cols => {\n    wrapSet = true;\n    wrap = cols;\n  };\n\n  function getWrap() {\n    if (!wrapSet) {\n      wrap = windowWidth();\n      wrapSet = true;\n    }\n\n    return wrap;\n  }\n\n  const deferY18nLookupPrefix = '__yargsString__:';\n\n  self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n\n  self.help = function help() {\n    if (cachedHelpMessage) return cachedHelpMessage;\n    normalizeAliases();\n    const base$0 = yargs.customScriptName ? yargs.$0 : shim.path.basename(yargs.$0);\n    const demandedOptions = yargs.getDemandedOptions();\n    const demandedCommands = yargs.getDemandedCommands();\n    const deprecatedOptions = yargs.getDeprecatedOptions();\n    const groups = yargs.getGroups();\n    const options = yargs.getOptions();\n    let keys = [];\n    keys = keys.concat(Object.keys(descriptions));\n    keys = keys.concat(Object.keys(demandedOptions));\n    keys = keys.concat(Object.keys(demandedCommands));\n    keys = keys.concat(Object.keys(options.default));\n    keys = keys.filter(filterHiddenOptions);\n    keys = Object.keys(keys.reduce((acc, key) => {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    const theWrap = getWrap();\n    const ui = shim.cliui({\n      width: theWrap,\n      wrap: !!theWrap\n    });\n\n    if (!usageDisabled) {\n      if (usages.length) {\n        usages.forEach(usage => {\n          ui.div(`${usage[0].replace(/\\$0/g, base$0)}`);\n\n          if (usage[1]) {\n            ui.div({\n              text: `${usage[1]}`,\n              padding: [1, 0, 0, 0]\n            });\n          }\n        });\n        ui.div();\n      } else if (commands.length) {\n        let u = null;\n\n        if (demandedCommands._) {\n          u = `${base$0} <${__('command')}>\\n`;\n        } else {\n          u = `${base$0} [${__('command')}]\\n`;\n        }\n\n        ui.div(`${u}`);\n      }\n    }\n\n    if (commands.length) {\n      ui.div(__('Commands:'));\n      const context = yargs.getContext();\n      const parentCommands = context.commands.length ? `${context.commands.join(' ')} ` : '';\n\n      if (yargs.getParserConfiguration()['sort-commands'] === true) {\n        commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n      }\n\n      commands.forEach(command => {\n        const commandString = `${base$0} ${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n        ui.span({\n          text: commandString,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4\n        }, {\n          text: command[1]\n        });\n        const hints = [];\n        if (command[2]) hints.push(`[${__('default')}]`);\n\n        if (command[3] && command[3].length) {\n          hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n        }\n\n        if (command[4]) {\n          if (typeof command[4] === 'string') {\n            hints.push(`[${__('deprecated: %s', command[4])}]`);\n          } else {\n            hints.push(`[${__('deprecated')}]`);\n          }\n        }\n\n        if (hints.length) {\n          ui.div({\n            text: hints.join(' '),\n            padding: [0, 0, 0, 2],\n            align: 'right'\n          });\n        } else {\n          ui.div();\n        }\n      });\n      ui.div();\n    }\n\n    const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n    keys = keys.filter(key => !yargs.parsed.newAliases[key] && aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n\n    const defaultGroup = __('Options:');\n\n    if (!groups[defaultGroup]) groups[defaultGroup] = [];\n    addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n\n    const isLongSwitch = sw => /^--/.test(getText(sw));\n\n    const displayedGroups = Object.keys(groups).filter(groupName => groups[groupName].length > 0).map(groupName => {\n      const normalizedKeys = groups[groupName].filter(filterHiddenOptions).map(key => {\n        if (~aliasKeys.indexOf(key)) return key;\n\n        for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey;\n        }\n\n        return key;\n      });\n      return {\n        groupName,\n        normalizedKeys\n      };\n    }).filter(_ref => {\n      let {\n        normalizedKeys\n      } = _ref;\n      return normalizedKeys.length > 0;\n    }).map(_ref2 => {\n      let {\n        groupName,\n        normalizedKeys\n      } = _ref2;\n      const switches = normalizedKeys.reduce((acc, key) => {\n        acc[key] = [key].concat(options.alias[key] || []).map(sw => {\n          if (groupName === self.getPositionalGroupName()) return sw;else {\n            return (/^[0-9]$/.test(sw) ? ~options.boolean.indexOf(key) ? '-' : '--' : sw.length > 1 ? '--' : '-') + sw;\n          }\n        }).sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2) ? 0 : isLongSwitch(sw1) ? 1 : -1).join(', ');\n        return acc;\n      }, {});\n      return {\n        groupName,\n        normalizedKeys,\n        switches\n      };\n    });\n    const shortSwitchesUsed = displayedGroups.filter(_ref3 => {\n      let {\n        groupName\n      } = _ref3;\n      return groupName !== self.getPositionalGroupName();\n    }).some(_ref4 => {\n      let {\n        normalizedKeys,\n        switches\n      } = _ref4;\n      return !normalizedKeys.every(key => isLongSwitch(switches[key]));\n    });\n\n    if (shortSwitchesUsed) {\n      displayedGroups.filter(_ref5 => {\n        let {\n          groupName\n        } = _ref5;\n        return groupName !== self.getPositionalGroupName();\n      }).forEach(_ref6 => {\n        let {\n          normalizedKeys,\n          switches\n        } = _ref6;\n        normalizedKeys.forEach(key => {\n          if (isLongSwitch(switches[key])) {\n            switches[key] = addIndentation(switches[key], '-x, '.length);\n          }\n        });\n      });\n    }\n\n    displayedGroups.forEach(_ref7 => {\n      let {\n        groupName,\n        normalizedKeys,\n        switches\n      } = _ref7;\n      ui.div(groupName);\n      normalizedKeys.forEach(key => {\n        const kswitch = switches[key];\n        let desc = descriptions[key] || '';\n        let type = null;\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length));\n        if (~options.boolean.indexOf(key)) type = `[${__('boolean')}]`;\n        if (~options.count.indexOf(key)) type = `[${__('count')}]`;\n        if (~options.string.indexOf(key)) type = `[${__('string')}]`;\n        if (~options.normalize.indexOf(key)) type = `[${__('string')}]`;\n        if (~options.array.indexOf(key)) type = `[${__('array')}]`;\n        if (~options.number.indexOf(key)) type = `[${__('number')}]`;\n\n        const deprecatedExtra = deprecated => typeof deprecated === 'string' ? `[${__('deprecated: %s', deprecated)}]` : `[${__('deprecated')}]`;\n\n        const extra = [key in deprecatedOptions ? deprecatedExtra(deprecatedOptions[key]) : null, type, key in demandedOptions ? `[${__('required')}]` : null, options.choices && options.choices[key] ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]` : null, defaultString(options.default[key], options.defaultDescription[key])].filter(Boolean).join(' ');\n        ui.span({\n          text: getText(kswitch),\n          padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n          width: maxWidth(switches, theWrap) + 4\n        }, desc);\n        if (extra) ui.div({\n          text: extra,\n          padding: [0, 0, 0, 2],\n          align: 'right'\n        });else ui.div();\n      });\n      ui.div();\n    });\n\n    if (examples.length) {\n      ui.div(__('Examples:'));\n      examples.forEach(example => {\n        example[0] = example[0].replace(/\\$0/g, base$0);\n      });\n      examples.forEach(example => {\n        if (example[1] === '') {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2]\n          });\n        } else {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2],\n            width: maxWidth(examples, theWrap) + 4\n          }, {\n            text: example[1]\n          });\n        }\n      });\n      ui.div();\n    }\n\n    if (epilogs.length > 0) {\n      const e = epilogs.map(epilog => epilog.replace(/\\$0/g, base$0)).join('\\n');\n      ui.div(`${e}\\n`);\n    }\n\n    return ui.toString().replace(/\\s*$/, '');\n  };\n\n  function maxWidth(table, theWrap, modifier) {\n    let width = 0;\n\n    if (!Array.isArray(table)) {\n      table = Object.values(table).map(v => [v]);\n    }\n\n    table.forEach(v => {\n      width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n    });\n    if (theWrap) width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n    return width;\n  }\n\n  function normalizeAliases() {\n    const demandedOptions = yargs.getDemandedOptions();\n    const options = yargs.getOptions();\n    (Object.keys(options.alias) || []).forEach(key => {\n      options.alias[key].forEach(alias => {\n        if (descriptions[alias]) self.describe(key, descriptions[alias]);\n        if (alias in demandedOptions) yargs.demandOption(key, demandedOptions[alias]);\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key);\n        if (~options.count.indexOf(alias)) yargs.count(key);\n        if (~options.string.indexOf(alias)) yargs.string(key);\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key);\n        if (~options.array.indexOf(alias)) yargs.array(key);\n        if (~options.number.indexOf(alias)) yargs.number(key);\n      });\n    });\n  }\n\n  let cachedHelpMessage;\n\n  self.cacheHelpMessage = function () {\n    cachedHelpMessage = this.help();\n  };\n\n  self.clearCachedHelpMessage = function () {\n    cachedHelpMessage = undefined;\n  };\n\n  function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n    let groupedKeys = [];\n    let toCheck = null;\n    Object.keys(groups).forEach(group => {\n      groupedKeys = groupedKeys.concat(groups[group]);\n    });\n    keys.forEach(key => {\n      toCheck = [key].concat(aliases[key]);\n\n      if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n        groups[defaultGroup].push(key);\n      }\n    });\n    return groupedKeys;\n  }\n\n  function filterHiddenOptions(key) {\n    return yargs.getOptions().hiddenOptions.indexOf(key) < 0 || yargs.parsed.argv[yargs.getOptions().showHiddenOpt];\n  }\n\n  self.showHelp = level => {\n    const logger = yargs._getLoggerInstance();\n\n    if (!level) level = 'error';\n    const emit = typeof level === 'function' ? level : logger[level];\n    emit(self.help());\n  };\n\n  self.functionDescription = fn => {\n    const description = fn.name ? shim.Parser.decamelize(fn.name, '-') : __('generated-value');\n    return ['(', description, ')'].join('');\n  };\n\n  self.stringifiedValues = function stringifiedValues(values, separator) {\n    let string = '';\n    const sep = separator || ', ';\n    const array = [].concat(values);\n    if (!values || !array.length) return string;\n    array.forEach(value => {\n      if (string.length) string += sep;\n      string += JSON.stringify(value);\n    });\n    return string;\n  };\n\n  function defaultString(value, defaultDescription) {\n    let string = `[${__('default:')} `;\n    if (value === undefined && !defaultDescription) return null;\n\n    if (defaultDescription) {\n      string += defaultDescription;\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += `\"${value}\"`;\n          break;\n\n        case 'object':\n          string += JSON.stringify(value);\n          break;\n\n        default:\n          string += value;\n      }\n    }\n\n    return `${string}]`;\n  }\n\n  function windowWidth() {\n    const maxWidth = 80;\n\n    if (shim.process.stdColumns) {\n      return Math.min(maxWidth, shim.process.stdColumns);\n    } else {\n      return maxWidth;\n    }\n  }\n\n  let version = null;\n\n  self.version = ver => {\n    version = ver;\n  };\n\n  self.showVersion = () => {\n    const logger = yargs._getLoggerInstance();\n\n    logger.log(version);\n  };\n\n  self.reset = function reset(localLookup) {\n    failMessage = null;\n    failureOutput = false;\n    usages = [];\n    usageDisabled = false;\n    epilogs = [];\n    examples = [];\n    commands = [];\n    descriptions = objFilter(descriptions, k => !localLookup[k]);\n    return self;\n  };\n\n  const frozens = [];\n\n  self.freeze = function freeze() {\n    frozens.push({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    });\n  };\n\n  self.unfreeze = function unfreeze() {\n    const frozen = frozens.pop();\n    assertNotStrictEqual(frozen, undefined, shim);\n    ({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    } = frozen);\n  };\n\n  return self;\n}\n\nfunction isIndentedText(text) {\n  return typeof text === 'object';\n}\n\nfunction addIndentation(text, indent) {\n  return isIndentedText(text) ? {\n    text: text.text,\n    indentation: text.indentation + indent\n  } : {\n    text,\n    indentation: indent\n  };\n}\n\nfunction getIndentation(text) {\n  return isIndentedText(text) ? text.indentation : 0;\n}\n\nfunction getText(text) {\n  return isIndentedText(text) ? text.text : text;\n}","map":{"version":3,"names":["assertNotStrictEqual","objFilter","YError","setBlocking","usage","yargs","y18n","shim","__","self","fails","failFn","f","push","failMessage","showHelpOnFail","showHelpOnFailFn","arg1","arg2","parseFunctionArgs","enabled","message","failureOutput","fail","msg","err","logger","_getLoggerInstance","length","i","getExitProcess","showHelp","error","exit","_hasParseCallback","usages","usageDisabled","description","getUsage","getUsageDisabled","getPositionalGroupName","examples","example","cmd","commands","command","isDefault","aliases","deprecated","map","cmdArray","getCommands","descriptions","describe","keyOrKeys","desc","Array","isArray","forEach","k","Object","keys","getDescriptions","epilogs","epilog","wrapSet","wrap","cols","getWrap","windowWidth","deferY18nLookupPrefix","deferY18nLookup","str","help","cachedHelpMessage","normalizeAliases","base$0","customScriptName","$0","path","basename","demandedOptions","getDemandedOptions","demandedCommands","getDemandedCommands","deprecatedOptions","getDeprecatedOptions","groups","getGroups","options","getOptions","concat","default","filter","filterHiddenOptions","reduce","acc","key","theWrap","ui","cliui","width","div","replace","text","padding","u","_","context","getContext","parentCommands","join","getParserConfiguration","sort","a","b","localeCompare","commandString","span","maxWidth","hints","align","aliasKeys","alias","parsed","newAliases","every","indexOf","defaultGroup","addUngroupedKeys","isLongSwitch","sw","test","getText","displayedGroups","groupName","normalizedKeys","aliasKey","undefined","switches","boolean","sw1","sw2","shortSwitchesUsed","some","addIndentation","kswitch","type","lastIndexOf","substring","count","string","normalize","array","number","deprecatedExtra","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","getIndentation","e","toString","table","modifier","values","v","Math","max","stringWidth","min","parseInt","demandOption","cacheHelpMessage","clearCachedHelpMessage","groupedKeys","toCheck","group","hiddenOptions","argv","showHiddenOpt","level","emit","functionDescription","fn","name","Parser","decamelize","separator","sep","value","JSON","stringify","process","stdColumns","version","ver","showVersion","log","reset","localLookup","frozens","freeze","unfreeze","frozen","pop","isIndentedText","indent","indentation"],"sources":["/home/sweun2/Desktop/test/sol/front/node_modules/yargs/build/lib/usage.js"],"sourcesContent":["import { assertNotStrictEqual, } from './typings/common-types.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function usage(yargs, y18n, shim) {\n    const __ = y18n.__;\n    const self = {};\n    const fails = [];\n    self.failFn = function failFn(f) {\n        fails.push(f);\n    };\n    let failMessage = null;\n    let showHelpOnFail = true;\n    self.showHelpOnFail = function showHelpOnFailFn(arg1 = true, arg2) {\n        function parseFunctionArgs() {\n            return typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n        }\n        const [enabled, message] = parseFunctionArgs();\n        failMessage = message;\n        showHelpOnFail = enabled;\n        return self;\n    };\n    let failureOutput = false;\n    self.fail = function fail(msg, err) {\n        const logger = yargs._getLoggerInstance();\n        if (fails.length) {\n            for (let i = fails.length - 1; i >= 0; --i) {\n                fails[i](msg, err, self);\n            }\n        }\n        else {\n            if (yargs.getExitProcess())\n                setBlocking(true);\n            if (!failureOutput) {\n                failureOutput = true;\n                if (showHelpOnFail) {\n                    yargs.showHelp('error');\n                    logger.error();\n                }\n                if (msg || err)\n                    logger.error(msg || err);\n                if (failMessage) {\n                    if (msg || err)\n                        logger.error('');\n                    logger.error(failMessage);\n                }\n            }\n            err = err || new YError(msg);\n            if (yargs.getExitProcess()) {\n                return yargs.exit(1);\n            }\n            else if (yargs._hasParseCallback()) {\n                return yargs.exit(1, err);\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n    let usages = [];\n    let usageDisabled = false;\n    self.usage = (msg, description) => {\n        if (msg === null) {\n            usageDisabled = true;\n            usages = [];\n            return self;\n        }\n        usageDisabled = false;\n        usages.push([msg, description || '']);\n        return self;\n    };\n    self.getUsage = () => {\n        return usages;\n    };\n    self.getUsageDisabled = () => {\n        return usageDisabled;\n    };\n    self.getPositionalGroupName = () => {\n        return __('Positionals:');\n    };\n    let examples = [];\n    self.example = (cmd, description) => {\n        examples.push([cmd, description || '']);\n    };\n    let commands = [];\n    self.command = function command(cmd, description, isDefault, aliases, deprecated = false) {\n        if (isDefault) {\n            commands = commands.map(cmdArray => {\n                cmdArray[2] = false;\n                return cmdArray;\n            });\n        }\n        commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n    };\n    self.getCommands = () => commands;\n    let descriptions = {};\n    self.describe = function describe(keyOrKeys, desc) {\n        if (Array.isArray(keyOrKeys)) {\n            keyOrKeys.forEach(k => {\n                self.describe(k, desc);\n            });\n        }\n        else if (typeof keyOrKeys === 'object') {\n            Object.keys(keyOrKeys).forEach(k => {\n                self.describe(k, keyOrKeys[k]);\n            });\n        }\n        else {\n            descriptions[keyOrKeys] = desc;\n        }\n    };\n    self.getDescriptions = () => descriptions;\n    let epilogs = [];\n    self.epilog = msg => {\n        epilogs.push(msg);\n    };\n    let wrapSet = false;\n    let wrap;\n    self.wrap = cols => {\n        wrapSet = true;\n        wrap = cols;\n    };\n    function getWrap() {\n        if (!wrapSet) {\n            wrap = windowWidth();\n            wrapSet = true;\n        }\n        return wrap;\n    }\n    const deferY18nLookupPrefix = '__yargsString__:';\n    self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n    self.help = function help() {\n        if (cachedHelpMessage)\n            return cachedHelpMessage;\n        normalizeAliases();\n        const base$0 = yargs.customScriptName\n            ? yargs.$0\n            : shim.path.basename(yargs.$0);\n        const demandedOptions = yargs.getDemandedOptions();\n        const demandedCommands = yargs.getDemandedCommands();\n        const deprecatedOptions = yargs.getDeprecatedOptions();\n        const groups = yargs.getGroups();\n        const options = yargs.getOptions();\n        let keys = [];\n        keys = keys.concat(Object.keys(descriptions));\n        keys = keys.concat(Object.keys(demandedOptions));\n        keys = keys.concat(Object.keys(demandedCommands));\n        keys = keys.concat(Object.keys(options.default));\n        keys = keys.filter(filterHiddenOptions);\n        keys = Object.keys(keys.reduce((acc, key) => {\n            if (key !== '_')\n                acc[key] = true;\n            return acc;\n        }, {}));\n        const theWrap = getWrap();\n        const ui = shim.cliui({\n            width: theWrap,\n            wrap: !!theWrap,\n        });\n        if (!usageDisabled) {\n            if (usages.length) {\n                usages.forEach(usage => {\n                    ui.div(`${usage[0].replace(/\\$0/g, base$0)}`);\n                    if (usage[1]) {\n                        ui.div({ text: `${usage[1]}`, padding: [1, 0, 0, 0] });\n                    }\n                });\n                ui.div();\n            }\n            else if (commands.length) {\n                let u = null;\n                if (demandedCommands._) {\n                    u = `${base$0} <${__('command')}>\\n`;\n                }\n                else {\n                    u = `${base$0} [${__('command')}]\\n`;\n                }\n                ui.div(`${u}`);\n            }\n        }\n        if (commands.length) {\n            ui.div(__('Commands:'));\n            const context = yargs.getContext();\n            const parentCommands = context.commands.length\n                ? `${context.commands.join(' ')} `\n                : '';\n            if (yargs.getParserConfiguration()['sort-commands'] === true) {\n                commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n            }\n            commands.forEach(command => {\n                const commandString = `${base$0} ${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n                ui.span({\n                    text: commandString,\n                    padding: [0, 2, 0, 2],\n                    width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4,\n                }, { text: command[1] });\n                const hints = [];\n                if (command[2])\n                    hints.push(`[${__('default')}]`);\n                if (command[3] && command[3].length) {\n                    hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n                }\n                if (command[4]) {\n                    if (typeof command[4] === 'string') {\n                        hints.push(`[${__('deprecated: %s', command[4])}]`);\n                    }\n                    else {\n                        hints.push(`[${__('deprecated')}]`);\n                    }\n                }\n                if (hints.length) {\n                    ui.div({\n                        text: hints.join(' '),\n                        padding: [0, 0, 0, 2],\n                        align: 'right',\n                    });\n                }\n                else {\n                    ui.div();\n                }\n            });\n            ui.div();\n        }\n        const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n        keys = keys.filter(key => !yargs.parsed.newAliases[key] &&\n            aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n        const defaultGroup = __('Options:');\n        if (!groups[defaultGroup])\n            groups[defaultGroup] = [];\n        addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n        const isLongSwitch = (sw) => /^--/.test(getText(sw));\n        const displayedGroups = Object.keys(groups)\n            .filter(groupName => groups[groupName].length > 0)\n            .map(groupName => {\n            const normalizedKeys = groups[groupName]\n                .filter(filterHiddenOptions)\n                .map(key => {\n                if (~aliasKeys.indexOf(key))\n                    return key;\n                for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n                    if (~(options.alias[aliasKey] || []).indexOf(key))\n                        return aliasKey;\n                }\n                return key;\n            });\n            return { groupName, normalizedKeys };\n        })\n            .filter(({ normalizedKeys }) => normalizedKeys.length > 0)\n            .map(({ groupName, normalizedKeys }) => {\n            const switches = normalizedKeys.reduce((acc, key) => {\n                acc[key] = [key]\n                    .concat(options.alias[key] || [])\n                    .map(sw => {\n                    if (groupName === self.getPositionalGroupName())\n                        return sw;\n                    else {\n                        return ((/^[0-9]$/.test(sw)\n                            ? ~options.boolean.indexOf(key)\n                                ? '-'\n                                : '--'\n                            : sw.length > 1\n                                ? '--'\n                                : '-') + sw);\n                    }\n                })\n                    .sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2)\n                    ? 0\n                    : isLongSwitch(sw1)\n                        ? 1\n                        : -1)\n                    .join(', ');\n                return acc;\n            }, {});\n            return { groupName, normalizedKeys, switches };\n        });\n        const shortSwitchesUsed = displayedGroups\n            .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n            .some(({ normalizedKeys, switches }) => !normalizedKeys.every(key => isLongSwitch(switches[key])));\n        if (shortSwitchesUsed) {\n            displayedGroups\n                .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n                .forEach(({ normalizedKeys, switches }) => {\n                normalizedKeys.forEach(key => {\n                    if (isLongSwitch(switches[key])) {\n                        switches[key] = addIndentation(switches[key], '-x, '.length);\n                    }\n                });\n            });\n        }\n        displayedGroups.forEach(({ groupName, normalizedKeys, switches }) => {\n            ui.div(groupName);\n            normalizedKeys.forEach(key => {\n                const kswitch = switches[key];\n                let desc = descriptions[key] || '';\n                let type = null;\n                if (~desc.lastIndexOf(deferY18nLookupPrefix))\n                    desc = __(desc.substring(deferY18nLookupPrefix.length));\n                if (~options.boolean.indexOf(key))\n                    type = `[${__('boolean')}]`;\n                if (~options.count.indexOf(key))\n                    type = `[${__('count')}]`;\n                if (~options.string.indexOf(key))\n                    type = `[${__('string')}]`;\n                if (~options.normalize.indexOf(key))\n                    type = `[${__('string')}]`;\n                if (~options.array.indexOf(key))\n                    type = `[${__('array')}]`;\n                if (~options.number.indexOf(key))\n                    type = `[${__('number')}]`;\n                const deprecatedExtra = (deprecated) => typeof deprecated === 'string'\n                    ? `[${__('deprecated: %s', deprecated)}]`\n                    : `[${__('deprecated')}]`;\n                const extra = [\n                    key in deprecatedOptions\n                        ? deprecatedExtra(deprecatedOptions[key])\n                        : null,\n                    type,\n                    key in demandedOptions ? `[${__('required')}]` : null,\n                    options.choices && options.choices[key]\n                        ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]`\n                        : null,\n                    defaultString(options.default[key], options.defaultDescription[key]),\n                ]\n                    .filter(Boolean)\n                    .join(' ');\n                ui.span({\n                    text: getText(kswitch),\n                    padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n                    width: maxWidth(switches, theWrap) + 4,\n                }, desc);\n                if (extra)\n                    ui.div({ text: extra, padding: [0, 0, 0, 2], align: 'right' });\n                else\n                    ui.div();\n            });\n            ui.div();\n        });\n        if (examples.length) {\n            ui.div(__('Examples:'));\n            examples.forEach(example => {\n                example[0] = example[0].replace(/\\$0/g, base$0);\n            });\n            examples.forEach(example => {\n                if (example[1] === '') {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                    });\n                }\n                else {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                        width: maxWidth(examples, theWrap) + 4,\n                    }, {\n                        text: example[1],\n                    });\n                }\n            });\n            ui.div();\n        }\n        if (epilogs.length > 0) {\n            const e = epilogs\n                .map(epilog => epilog.replace(/\\$0/g, base$0))\n                .join('\\n');\n            ui.div(`${e}\\n`);\n        }\n        return ui.toString().replace(/\\s*$/, '');\n    };\n    function maxWidth(table, theWrap, modifier) {\n        let width = 0;\n        if (!Array.isArray(table)) {\n            table = Object.values(table).map(v => [v]);\n        }\n        table.forEach(v => {\n            width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n        });\n        if (theWrap)\n            width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n        return width;\n    }\n    function normalizeAliases() {\n        const demandedOptions = yargs.getDemandedOptions();\n        const options = yargs.getOptions();\n        (Object.keys(options.alias) || []).forEach(key => {\n            options.alias[key].forEach(alias => {\n                if (descriptions[alias])\n                    self.describe(key, descriptions[alias]);\n                if (alias in demandedOptions)\n                    yargs.demandOption(key, demandedOptions[alias]);\n                if (~options.boolean.indexOf(alias))\n                    yargs.boolean(key);\n                if (~options.count.indexOf(alias))\n                    yargs.count(key);\n                if (~options.string.indexOf(alias))\n                    yargs.string(key);\n                if (~options.normalize.indexOf(alias))\n                    yargs.normalize(key);\n                if (~options.array.indexOf(alias))\n                    yargs.array(key);\n                if (~options.number.indexOf(alias))\n                    yargs.number(key);\n            });\n        });\n    }\n    let cachedHelpMessage;\n    self.cacheHelpMessage = function () {\n        cachedHelpMessage = this.help();\n    };\n    self.clearCachedHelpMessage = function () {\n        cachedHelpMessage = undefined;\n    };\n    function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n        let groupedKeys = [];\n        let toCheck = null;\n        Object.keys(groups).forEach(group => {\n            groupedKeys = groupedKeys.concat(groups[group]);\n        });\n        keys.forEach(key => {\n            toCheck = [key].concat(aliases[key]);\n            if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n                groups[defaultGroup].push(key);\n            }\n        });\n        return groupedKeys;\n    }\n    function filterHiddenOptions(key) {\n        return (yargs.getOptions().hiddenOptions.indexOf(key) < 0 ||\n            yargs.parsed.argv[yargs.getOptions().showHiddenOpt]);\n    }\n    self.showHelp = (level) => {\n        const logger = yargs._getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(self.help());\n    };\n    self.functionDescription = fn => {\n        const description = fn.name\n            ? shim.Parser.decamelize(fn.name, '-')\n            : __('generated-value');\n        return ['(', description, ')'].join('');\n    };\n    self.stringifiedValues = function stringifiedValues(values, separator) {\n        let string = '';\n        const sep = separator || ', ';\n        const array = [].concat(values);\n        if (!values || !array.length)\n            return string;\n        array.forEach(value => {\n            if (string.length)\n                string += sep;\n            string += JSON.stringify(value);\n        });\n        return string;\n    };\n    function defaultString(value, defaultDescription) {\n        let string = `[${__('default:')} `;\n        if (value === undefined && !defaultDescription)\n            return null;\n        if (defaultDescription) {\n            string += defaultDescription;\n        }\n        else {\n            switch (typeof value) {\n                case 'string':\n                    string += `\"${value}\"`;\n                    break;\n                case 'object':\n                    string += JSON.stringify(value);\n                    break;\n                default:\n                    string += value;\n            }\n        }\n        return `${string}]`;\n    }\n    function windowWidth() {\n        const maxWidth = 80;\n        if (shim.process.stdColumns) {\n            return Math.min(maxWidth, shim.process.stdColumns);\n        }\n        else {\n            return maxWidth;\n        }\n    }\n    let version = null;\n    self.version = ver => {\n        version = ver;\n    };\n    self.showVersion = () => {\n        const logger = yargs._getLoggerInstance();\n        logger.log(version);\n    };\n    self.reset = function reset(localLookup) {\n        failMessage = null;\n        failureOutput = false;\n        usages = [];\n        usageDisabled = false;\n        epilogs = [];\n        examples = [];\n        commands = [];\n        descriptions = objFilter(descriptions, k => !localLookup[k]);\n        return self;\n    };\n    const frozens = [];\n    self.freeze = function freeze() {\n        frozens.push({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions,\n        });\n    };\n    self.unfreeze = function unfreeze() {\n        const frozen = frozens.pop();\n        assertNotStrictEqual(frozen, undefined, shim);\n        ({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions,\n        } = frozen);\n    };\n    return self;\n}\nfunction isIndentedText(text) {\n    return typeof text === 'object';\n}\nfunction addIndentation(text, indent) {\n    return isIndentedText(text)\n        ? { text: text.text, indentation: text.indentation + indent }\n        : { text, indentation: indent };\n}\nfunction getIndentation(text) {\n    return isIndentedText(text) ? text.indentation : 0;\n}\nfunction getText(text) {\n    return isIndentedText(text) ? text.text : text;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}